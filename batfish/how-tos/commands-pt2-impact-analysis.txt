cd /root/network-automation/batfish/

import logging
logging.getLogger('pybatfish').setLevel(logging.WARN)

# imports - note ... `import Interface`
from pybatfish.client.commands import *
from pybatfish.question.question import load_questions
from pybatfish.datamodel.flow import (HeaderConstraints,
                                         PathConstraints)

from pybatfish.question import bfq
from pybatfish.datamodel.primitives import Interface
from helpers import pprint_traceroute

bf_session.host = "172.29.236.139"
load_questions()

# init snapshot
NETWORK_NAME = "ebgp-spine-leaf-network1"
BASE_SNAPSHOT_NAME = "ebgp-spine-leaf-snapshot1"
SNAPSHOT_PATH = "nxos9k-ebgp-spine-leaf/snapshot-2"

bf_set_network(NETWORK_NAME)
bf_init_snapshot(SNAPSHOT_PATH, name=BASE_SNAPSHOT_NAME, overwrite=True)

# impact 1 - create snapshot fork - deactivate node 
pprint_traceroute(bfq.traceroute(startLocation="server1",headers=HeaderConstraints(dstIps='server2')).answer().frame())

// based on this lets deactivate spine2. you can see only 4 traces (mention if interfaces were shutdown)

bf_fork_snapshot(BASE_SNAPSHOT_NAME, 'spine2-failure', deactivate_nodes=['spine2'], overwrite=True)
tr_answer = bfq.traceroute(startLocation="server1",headers=HeaderConstraints(dstIps='server2')).answer('spine2-failure').frame()
pprint_traceroute(tr_answer)

// Note: future calls now need to have baseline included.
